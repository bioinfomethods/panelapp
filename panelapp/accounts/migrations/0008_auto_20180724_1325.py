##
## Copyright (c) 2016-2019 Genomics England Ltd.
## 
## This file is part of PanelApp
## (see https://panelapp.genomicsengland.co.uk).
## 
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
## 
##   http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##
# Generated by Django 2.0.6 on 2018-07-24 12:25

from django.db import migrations
from panels.models import PanelType


user_support_group = 'User Support'
site_editor_group = 'Site Editor'
file_upload_curation_group = 'File Upload Curation'


def add_paneltype_permissions(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    paneltype_content_type = ContentType.objects.get_for_model(PanelType)
    site_editor = Group.objects.get(name=site_editor_group)
    site_editor.permissions.set(
        list(Permission.objects.filter(content_type=paneltype_content_type).values_list('id', flat=True))
    )


def remove_paneltype_permissions(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    paneltype_content_type = ContentType.objects.get_for_model(PanelType)
    try:
        site_editor = Group.objects.get(name=site_editor_group)
        site_editor.permissions.remove(
            *list(Permission.objects.filter(content_type=paneltype_content_type).values_list('id', flat=True))
        )
    except Group.DoesNotExist:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0007_auto_20180615_1147'),
    ]

    operations = [
        migrations.RunPython(add_paneltype_permissions, remove_paneltype_permissions)
    ]
